// lab2.h   Author: Junhao Chen
// The lab is Simulating checkout lines at a supermarket.
// In order to simulate it, there are three classes, customer,
// casher, and supermarket defined in the lab2.h
//
// The class customer simulates customers who check out at the
// supermarket. Individuals have a value to count the number of
// items they want to buy, generated by rand() and the range (5,40)
//
// The class casher simulates cashers who work at the supermarket.
// Each of them has a line to contain no more than 5 customers. The
// casher spends different times for checking out every customer
// depending on the items the customer buys.
//
// The class supermarket simulates the supermarket. It has cashers from
// 2 to 10. It also has a waiting queue to contain customers who are
// waitting for a casher to checkout.
// When the number of cusromers in the waitting queue more than 10, add
// a casher. Remove a casher when the casher finishes his/her customers
// and the waitfing quese is empty.

#include "../lib/list.h"

// Class Customer to simulate customers who buy staffs at the supermarket.
// NumOfItems is the number of items he or she wants to buy.
class Customer
{
    public:
        Customer();
        ~Customer();
        Customer(const Customer &c); //Copy constructor
        Customer(Customer &&c); //move constructor
        int GetNumOfItems();
        int GetCheckoutTime(); // estimate checking out time
        void AddWaitingTime(); // waiting time ++ 
        int GetWaitingTime(); // get waiting time
    private:
        int NumOfItems;  //the total number of items
        int WaitingTime; //time of waitting for checkout
        int ServerTime;  // time of checking out
};

// Class Casher to simulate cashers work at the supermarket
class Casher
{
public:
    Casher();
    ~Casher();
    Casher(const Casher &c); //copy constructor
    Casher(Casher &&c); //move constructor
    bool IsAddable(); // Standing Line is full or not, (<5)
    bool IsChecking();     //Check switching customers
    void AddCustomer(Customer *customer); //Add a customer to the casher's line
    Customer* SwitchCustomer(); // Switch the Current Customer if finished 
    int GetCustomerNum(); // Check number of waitting customers 
    void Run(); //update time
    void Reset(); // reset Time_stand_over_3, Tot_Num_Check_Customers to 0
    int GetTimeStand3(); // Get Time of more than 3 people at standing line
private:
    int Current_Customer_CheckOutTime; //the chech out time of the current customers
    int Time_stand_over_3; // time when more than 3 customers standing on the line hourly
    List<Customer*> *StandingCustomers; // container of standing customers.
    Customer* Current_Customer;
};

// Class Supermarket to simulate the checking out case in the supermarket
class Supermarket
{
public:
    Supermarket();
    ~Supermarket();
    void InsertCustomer(Customer * customer); // Insert a new customer according to rules
    int GenerateNumCustomers(int time); // generate # new Customers at every minute
    void CheckCashers();// Delete Casher if need
    void Run(); //simulate the case
private:
    SortedList<Casher*> *Cashers;
    List<Customer*> *WaitingQueue;
};
